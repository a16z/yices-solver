name: build-windows

on:
  workflow_call:
    inputs:
      yices_version:
        description: "Upstream Yices version (e.g. 2.6.5)"
        required: true
        type: string
      wheel_version:
        description: "Python wheel version (e.g. 2.6.5.post123)"
        required: true
        type: string
  workflow_dispatch:
    inputs:
      yices_version:
        description: "Upstream Yices version (e.g. 2.6.5)"
        required: true
  push:
    branches:
      - main
    paths:
      - 'pyproject.toml'
      - '.github/workflows/build-windows.yml'
      - '.github/actions/**'

env:
  YICES_VERSION: ${{ inputs.yices_version || github.event.inputs.yices_version || (github.ref_name != 'main' && github.ref_name) || '2.6.4' }}
  WHEEL_VERSION: ${{ inputs.wheel_version || format('{0}.post{1}', (inputs.yices_version || github.event.inputs.yices_version || (github.ref_name != 'main' && github.ref_name) || '2.6.4'), github.run_number) }}

jobs:
  build-wheel:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]

    steps:
    - uses: actions/checkout@v4

    - uses: actions/setup-python@v5
      with:
        python-version: 3.12

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip build wheel delvewheel setuptools

    - name: Print tool versions
      shell: bash
      run: |
        pip list

    - name: Download Yices release
      uses: ./.github/actions/download-yices
      with:
        yices-version: ${{ env.YICES_VERSION }}
        output-path: /tmp

    - name: Stage artifacts
      shell: bash
      run: |
        set -euo pipefail

        mkdir -p yices_solver/Scripts yices_solver/lib

        # don't copy from lib/, it only contains libyices.a and libyices.dll.a
        # note: libyices.dll is in bin/
        mv /tmp/yices-${YICES_VERSION}/bin/libyices.dll yices_solver/lib/
        mv /tmp/yices-${YICES_VERSION}/bin/* yices_solver/Scripts/

    - name: Build wheel
      shell: bash
      env:
        SETUPTOOLS_SCM_PRETEND_VERSION: ${{ env.WHEEL_VERSION }}
      run: |
        echo "Building wheel for yices-solver version ${WHEEL_VERSION}"
        python3 -m build --wheel \
          --config-setting="--build-option=--plat-name" \
          --config-setting="--build-option=win_amd64"

    - name: Verify and inspect wheel
      uses: ./.github/actions/verify-wheel
      with:
        wheel-version: ${{ env.WHEEL_VERSION }}
        wheel-dir: dist/

    # repair the wheel for Windows
    - name: Repair wheel with delvewheel
      shell: bash
      run: |
        delvewheel repair -v -w repaired/ dist/*.whl

        # Move the repaired wheel back to dist/
        mv repaired/*.whl dist/

    # upload the finished wheel
    - uses: actions/upload-artifact@v4
      with:
        name: wheel-${{ matrix.os }}
        path: dist/*.whl

  test-publish:
    runs-on: ubuntu-latest
    needs: build-wheel
    permissions:
      id-token: write

    steps:
    - uses: actions/download-artifact@v4
      with:
        name: wheel-windows-latest
        path: dist/

    - name: Publish package distributions to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
        verbose: true

  smoke-test:
    name: test ${{ matrix.os }} / py${{ matrix.py }}
    needs: test-publish
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
        py: ['3.9', '3.10', '3.11', '3.12', '3.13']
    steps:
      # checkout needed to run the test-binaries action
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.py }}

      - name: Wait for PyPI index to be updated
        run: sleep 600

      - name: Install wheel
        shell: bash
        run: |
          set -euo pipefail

          python -m venv venv
          source venv/Scripts/activate

          pip install -vv \
            --index-url https://test.pypi.org/simple/ \
            "yices-solver==${WHEEL_VERSION}"

      - name: Inspect venv
        shell: bash
        run: ls -la venv/Scripts/

      - name: Test binaries
        uses: ./.github/actions/test-binaries
        with:
          venv-path: venv
