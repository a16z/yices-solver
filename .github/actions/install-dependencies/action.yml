name: Install Dependencies

inputs:
  use-sudo:
    description: 'Whether to use sudo for package installation'
    required: false
    default: 'true'

runs:
  using: composite
  steps:
    - name: Install Linux Dependencies
      if: runner.os == 'Linux'
      shell: bash
      run: |
        case "${{ inputs.use-sudo }}" in
          true)  SUDO_CMD="sudo" ;;
          false) SUDO_CMD="" ;;
          *) echo "Invalid value for use-sudo: ${{ inputs.use-sudo }}" && exit 1 ;;
        esac

        DEPS="gperf cmake autoconf automake libtool glibc-static tree"

        # Detect package manager and install dependencies accordingly
        if command -v apt-get >/dev/null 2>&1; then
          # Debian/Ubuntu systems
          $SUDO_CMD apt-get update
          $SUDO_CMD apt-get install -y $DEPS
          $SUDO_CMD apt-get install -y python3-pip python3-venv
        elif command -v dnf >/dev/null 2>&1; then
          # RHEL/CentOS/Fedora/AlmaLinux systems (including manylinux containers)
          $SUDO_CMD dnf install -y $DEPS
          $SUDO_CMD dnf install -y python3-pip python3-devel
        elif command -v yum >/dev/null 2>&1; then
          # Older RHEL/CentOS systems
          $SUDO_CMD yum install -y $DEPS
          $SUDO_CMD yum install -y python3-pip python3-devel
        else
          echo "No supported package manager found (apt-get, dnf, or yum)"
          exit 1
        fi

    - name: Install MacOS Dependencies
      if: runner.os == 'macOS'
      shell: bash
      run: |
        brew install automake cmake libtool tree

    - name: Install Python Dependencies
      shell: bash
      run: |
        python3 -m pip install --upgrade pip build wheel setuptools delocate

