name: 'Build Yices from Source'
description: 'Build Yices SMT solver from source, including its dependencies (libpoly and CUDD)'

inputs:
  yices-version:
    description: 'Yices version to build (e.g. 2.6.5)'
    required: true
    default: '2.6.5'
  output-path:
    description: 'Directory where Yices will be built and installed'
    required: false
    default: '/tmp'

runs:
  using: 'composite'
  steps:
    - name: Set up environment variables
      shell: bash
      run: |
        echo "INSTALL_DIR=${{ inputs.output-path }}/yices-${{ inputs.yices-version }}" >> $GITHUB_ENV
        echo "YICES_VERSION=${{ inputs.yices-version }}" >> $GITHUB_ENV

    - name: Build GMP
      shell: bash
      env:
        GMP_VERSION: 6.3.0
      run: |
        set -euo pipefail

        curl -sSL https://ftp.gnu.org/gnu/gmp/gmp-${GMP_VERSION}.tar.xz | tar -xJ
        pushd gmp-${GMP_VERSION}
          ./configure \
            --disable-shared \
            --enable-static \
            --with-pic \
            --prefix=/usr/local

          make -j$(nproc)

          # uncomment to run tests
          # make check

          sudo make install
        popd

    - name: Build libpoly
      shell: bash
      run: |
        set -euo pipefail

        # Clone libpoly
        git clone --depth 1 https://github.com/SRI-CSL/libpoly
        pushd libpoly/build
          cmake .. \
            -DLIBPOLY_BUILD_STATIC=ON \
            -DLIBPOLY_BUILD_STATIC_PIC=ON \
            -DCMAKE_BUILD_TYPE=Release

          make -j$(nproc 2>/dev/null || sysctl -n hw.ncpu) static_pic_poly
          sudo make install
        popd

    - name: Build CUDD
      shell: bash
      run: |
        set -euo pipefail

        # Clone CUDD
        git clone --branch cudd-3.0.0 --single-branch --depth 1 https://github.com/ivmai/cudd

        pushd cudd
          autoreconf -i

          ./configure --enable-silent-rules \
            --enable-static \
            --disable-shared \
            --prefix=/usr/local \
            CFLAGS="-O3 -fPIC"

          make -j$(nproc 2>/dev/null || sysctl -n hw.ncpu)

          # uncomment to run tests
          # make check

          sudo make install
        popd

    - name: Build Yices
      shell: bash
      run: |
        set -euo pipefail
        echo "Building Yices ${YICES_VERSION}..."

        # Clone Yices repository
        git clone --branch "Yices-${YICES_VERSION}" --depth 1 --single-branch \
          https://github.com/SRI-CSL/yices2

        pushd yices2
          # Configure and build Yices
          autoconf

          CPPFLAGS="-I/usr/local/include" \
          LDFLAGS="-L/usr/local/lib" \
          ./configure \
            --with-pic-gmp=/usr/local/lib/libgmp.a \
            --with-pic-gmp-include-dir=/usr/local/include \
            --with-pic-libpoly=/usr/local/lib/libpicpoly.a \
            --with-pic-libpoly-include-dir=/usr/local/include \
            --enable-mcsat \
            --disable-doc \
            --prefix="$INSTALL_DIR"

          N=$(nproc 2>/dev/null || sysctl -n hw.ncpu)
          make -j$N static-bin lib
        popd

    - name: Verify the build
      shell: bash
      run: |
        set -euo pipefail
        echo "Verifying Yices build..."

        TARGET_DIR=$(find yices2/build -mindepth 1 -maxdepth 1 -type d | head -n 1)
        echo "TARGET_DIR=$TARGET_DIR" >> $GITHUB_ENV

        echo "TARGET_DIR: $TARGET_DIR"
        ls -la "$TARGET_DIR"

        echo "$TARGET_DIR/static_bin:"
        ls -la "$TARGET_DIR/static_bin"

        echo "$TARGET_DIR/lib:"
        ls -la "$TARGET_DIR/lib"

        # Check that the binaries exist and can run
        echo "yices --version"
        "$TARGET_DIR/static_bin/yices" --version

        echo "yices_smt2 --version"
        "$TARGET_DIR/static_bin/yices_smt2" --version

    - name: Move binaries to output directory
      shell: bash
      run: |
        set -euo pipefail

        mkdir -p "$INSTALL_DIR/bin"
        mkdir -p "$INSTALL_DIR/lib"

        mv "$TARGET_DIR/static_bin/yices" "$INSTALL_DIR/bin"
        mv "$TARGET_DIR/static_bin/yices_sat" "$INSTALL_DIR/bin/yices-sat"
        mv "$TARGET_DIR/static_bin/yices_smt" "$INSTALL_DIR/bin/yices-smt"
        mv "$TARGET_DIR/static_bin/yices_smt2" "$INSTALL_DIR/bin/yices-smt2"

        # move both shared and static libraries to the install directory
        # (mirrors the official Yices releases)
        mv $TARGET_DIR/lib/* "$INSTALL_DIR/lib"
